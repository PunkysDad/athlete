version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: athlete-postgres
    environment:
      POSTGRES_DB: athlete_performance_db
      POSTGRES_USER: athlete_user
      POSTGRES_PASSWORD: dev_password_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - athlete-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U athlete_user -d athlete_performance_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: athlete-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    volumes:
      - ./backend:/workspace
      - maven_cache:/home/appuser/.m2
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - athlete-network

  frontend:
    build: 
      context: .              # CHANGED: from ./frontend to . (root directory)
      dockerfile: Dockerfile.dev
    container_name: athlete-frontend
    ports:
      - "19000:19000"
      - "19001:19001"
      - "8081:8081"
    volumes:
      - .:/app              # CHANGED: from ./frontend:/app to .:/app
      - node_modules:/app/node_modules
    networks:
      - athlete-network

volumes:
  postgres_data:
  maven_cache:
  node_modules:

networks:
  athlete-network:
    driver: bridge